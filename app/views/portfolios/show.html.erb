<h1><%= @portfolio.name %></h1>
<% if @portfolio.description.present? %>
	<p><%= @portfolio.description %></p>
<% end %>
<table class="table table-striped table-condensed table-outlined">
	<tr>
		<th>Fund</th>
		<th>Category</th>
		<th>Desired Allocation</th>
		<%  if @portfolio.user == current_user && @portfolio.current_asset_allocation.present? %>
		<th>Current Allocation</th>
		<% end %>
		<th>Current Return</th>
	</tr>
	<% @portfolio.portfolio_assets.each do |pa| %>
		<tr>
			<td><%= link_to "#{pa.investment_asset.name.html_safe unless pa.investment_asset.blank?} (#{pa.investment_asset.symbol unless pa.investment_asset.blank?})", investment_asset_path(pa.investment_asset) %></td>
			<td><%= pa.investment_asset.investment_asset_category.name unless pa.investment_asset.blank? || pa.investment_asset.investment_asset_category.blank? %></td>
			<td><%= number_to_percentage(pa.percentage, :precision => 1) %></td>
			<%  if @portfolio.user == current_user && @portfolio.current_asset_allocation.present? %>
			<td><%= number_to_percentage(@portfolio.current_asset_allocation[pa.investment_asset_id] * 100, :precision => 1) %></td>
			<% end %>
			<td><%#= number_to_percentage(pa.calculate_return(@portfolio.buy_list_assets(pa.investment_asset_id)), :precision => 2) unless @portfolio.buy_list_assets(pa.investment_asset_id).blank? %></td>
		</tr>
	<% end %>
	<tr>
		<td>&nbsp;</td>
		<td>&nbsp;</td>
		<td>&nbsp;</td>
		<%  if @portfolio.user == current_user && @portfolio.current_asset_allocation.present? %>
		<td>&nbsp;</td>
		<% end %>
		<td><b><%= number_to_percentage(@portfolio.total_return, :precision => 2) %></b></td>
	</tr>
</table>
<p>
	
	<% historic = @portfolio.historical(10) %>
	Historic Dollar Cost Average Return: <%= number_to_percentage(historic[:compound_annual_growth], :precision => 1) %> over <%= historic[:years] %> years</p>

<% if current_user && @portfolio.user_id == current_user.id %>
	<%= link_to 'Edit', edit_portfolio_path(@portfolio), :class => 'btn small primary' %>&nbsp;
	<%= link_to 'Delete', @portfolio, :confirm => 'Are you sure?', :method => :delete, :class => 'btn small danger' %>&nbsp;
<% else %>
	<%= link_to 'Clone', edit_portfolio_path(@portfolio), :class => 'btn btn-inverse' %>
<% end %>
<%= link_to 'Create Investment Plan',  {:controller=>"investment_plans", :action=>"new", :portfolio_id => @portfolio.id}, :class => 'btn btn-primary' %>
<div id='chart'></div>


<script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">

      // Load the Visualization API and the piechart package.
      google.load('visualization', '1.0', {'packages':['corechart']});

      // Set a callback to run when the Google Visualization API is loaded.
      google.setOnLoadCallback(drawChart);

      // Callback that creates and populates a data table,
      // instantiates the pie chart, passes in the data and
      // draws it.
      function drawChart() {
        var data = google.visualization.arrayToDataTable([
                  ['Date', 'Value', 'Cost'],
              <%= @portfolio.historical(10)[:data].map{|row| "['#{row[:date]}', #{row[:value]}, #{row[:cost]}]"}.join(',') %>
                ]);

        var options = {
          title: 'Portfolio Performance',
          hAxis: {title: 'Date',  titleTextStyle: {color: 'red'}},
          height: 400,
          width: 800
        };

        var chart = new google.visualization.AreaChart(document.getElementById('chart'));
        chart.draw(data, options);
/*
        //var data = [<%#= @portfolio.historical(10)[:data].map{|i| "{date: #{i[:date]}, amount: #{i[:value]}}"}.join(', ') %>];

        // Create the data table.
        var data = new google.visualization.DataTable();
        data.addColumn('number', 'Value');
        data.addColumn('date', 'Date');
        data.addRows([
          <%#= @portfolio.historical(10)[:data].map{|i| "[#{i[:value]}, new Date(#{i[:date].year}, #{i[:date].month}, #{i[:date].day})]"}.join(', ') %>
        ]);

        // Set chart options
        var options = {'title':'Portfolio Value over time',
                       'width':400,
                       'height':300};

        // Instantiate and draw our chart, passing in some options.
        var chart = new google.visualization.BarChart(document.getElementById('chart'));
        chart.draw(data, options);
*/
      }
    </script>



